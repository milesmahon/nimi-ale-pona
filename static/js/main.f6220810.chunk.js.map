{"version":3,"sources":["components/Word.js","components/WordList.js","components/Header.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Word","props","className","word","meanings","WordList","nimi_ale","filter","nimi","searchTerm","includes","some","meaning","item","map","Header","SearchBar","id","type","placeholder","autoFocus","value","onChange","e","setSearchTerm","target","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAceA,MAZf,SAAcC,GACV,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKD,EAAME,OACX,+BACI,6BAAKF,EAAMG,SAAS,GAAG,KACvB,6BAAKH,EAAMG,SAAS,GAAG,YCYxBC,MAZf,SAAkBJ,GAGd,OACI,qBAAKC,UAAU,oBAAf,SACI,oBAAIA,UAAU,WAAd,SACKI,EAASC,QAAO,SAAAC,GAAI,OAVfL,EAUgCK,EAV1BC,EAUgCR,EAAMQ,WATvDN,EAAKA,KAAKO,SAASD,IAAeN,EAAKC,SAASO,MAAK,SAAAC,GAAO,OAAIA,EAAQD,MAAK,SAAAE,GAAI,OAAIA,EAAKH,SAASD,SAD9G,IAAsBN,EAAMM,KAUmDK,KAAI,SAAAN,GAAI,OAAK,cAAC,EAAD,CAAML,KAAMK,EAAKL,KAAMC,SAAUI,EAAKJ,mBCJnHW,MARf,WACI,OACI,qBAAKb,UAAU,SAAf,SACI,4DCOGc,MAVf,SAAmBf,GACf,OACI,qBAAKC,UAAU,YAAf,SACI,uBAAOe,GAAG,YAAYC,KAAK,OAAOC,YAAY,mBAAmBC,UAAU,YACnEC,MAAOpB,EAAMQ,WACba,SAAU,SAACC,GAAD,OAAOtB,EAAMuB,cAAcD,EAAEE,OAAOJ,aCYnDK,MAbf,WAAgB,IAAD,EAEuBC,mBAAS,IAFhC,mBAENlB,EAFM,KAEMe,EAFN,KAIb,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWO,WAAYA,EAAYe,cAAiBA,IACpD,cAAC,EAAD,CAAUf,WAAcA,QCFfmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f6220810.chunk.js","sourcesContent":["import '../styles/App.css';\n\nfunction Word(props) {\n    return (\n        <div className=\"Word\">\n            <li>{props.word}</li>\n            <ul>\n                <li>{props.meanings[0][0]}</li>\n                <li>{props.meanings[0][1]}</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Word;","import nimi_ale from '../data/nimi_ale';\nimport Word from './Word';\nimport '../styles/App.css';\n\nfunction searchFilter(word, searchTerm) {\n    return word.word.includes(searchTerm) || word.meanings.some(meaning => meaning.some(item => item.includes(searchTerm)))\n}\n\nfunction WordList(props) {\n    // nimi_ale.slice(0,5).forEach(element => element.meanings.forEach(meaning => meaning.forEach(submeaning => console.log(submeaning.includes(\"a\")))));\n    // nimi_ale.slice(0,5).forEach(element => element.meanings.forEach(meaning => console.log(meaning.some(item => item.includes(\"a\")))));\n    return (\n        <div className=\"WordListContainer\">\n            <ul className=\"WordList\">\n                {nimi_ale.filter(nimi => searchFilter(nimi, props.searchTerm)).map(nimi => (<Word word={nimi.word} meanings={nimi.meanings}></Word>))}\n            </ul>\n        </div>\n    )\n}\n\nexport default WordList;","import '../styles/App.css';\n\nfunction Header() {\n    return (\n        <div className=\"Header\">\n            <h1> nimi ale li toki pona </h1>\n        </div>\n    )\n}\n\nexport default Header;","import '../styles/App.css';\n\nfunction SearchBar(props) {\n    return (\n        <div className=\"SearchBar\">\n            <input id=\"searchBar\" type=\"text\" placeholder=\"ale li toki pona\" autoFocus=\"autofocus\" \n                    value={props.searchTerm}\n                    onChange={(e) => props.setSearchTerm(e.target.value)}></input>\n        </div>\n    )\n}\n\nexport default SearchBar;","import './styles/App.css';\nimport WordList from './components/WordList';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <SearchBar searchTerm={searchTerm} setSearchTerm = {setSearchTerm}/>\n      <WordList searchTerm = {searchTerm}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}